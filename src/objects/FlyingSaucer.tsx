/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import model from "../assets/models/Flying_Saucer.glb?url";

type GLTFResult = GLTF & {
  nodes: {
    ["Node-Mesh"]: THREE.Mesh;
    ["Node-Mesh_1"]: THREE.Mesh;
    ["Node-Mesh_2"]: THREE.Mesh;
    ["Node-Mesh_3"]: THREE.Mesh;
  };
  materials: {
    lambert9SG: THREE.MeshStandardMaterial;
    lambert8SG: THREE.MeshStandardMaterial;
    lambert10SG: THREE.MeshStandardMaterial;
    lambert7SG: THREE.MeshStandardMaterial;
  };
};

export default function FlyingSaucer({
  ...props
}: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(model) as unknown as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes["Node-Mesh"].geometry}
        material={materials.lambert9SG}
      />
      <mesh
        geometry={nodes["Node-Mesh_1"].geometry}
        material={materials.lambert8SG}
      />
      <mesh
        geometry={nodes["Node-Mesh_2"].geometry}
        material={materials.lambert10SG}
      />
      <mesh
        geometry={nodes["Node-Mesh_3"].geometry}
        material={materials.lambert7SG}
      />
    </group>
  );
}

// useGLTF.preload("/Flying_Saucer.glb");
